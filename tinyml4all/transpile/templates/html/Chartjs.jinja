<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Scatter plot</title>
    <script defer src="https://unpkg.com/@tailwindcss/browser@4"></script>
    <script defer src="https://cdn.jsdelivr.net/npm/alpinejs@3.x.x/dist/cdn.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/chart.js@4.4.7/dist/chart.umd.min.js"></script>
    <script>{{ asset("chartjs-zoom.js") }}</script>
    <script src="https://cdn.jsdelivr.net/npm/chartjs-plugin-annotation"></script>
    <style>
        #container {
            padding: 1rem;
            display: flex;
            flex-direction: column;
        }

        #canvas, canvas {
            width: 100%;
            height: 100%;
        }
    </style>
</head>
<body>
    <div x-data="{{ this.alpine.script }}" id="container">
        <div id="canvas" class="w-full h-full">
            <canvas></canvas>
        </div>

        {{ this.alpine.template }}
    </div>

    <!-- global variables -->
    <script>
        {% for k, v in this.vars.items() %}
            var {{ k }} = {{ v | to_json }}
        {% endfor %}
    </script>

    <!-- beforeInit hook -->
    <script>
        {% if this.definition["hooks"]["beforeInit"] %}
            function beforeInit(def) {
                {{ this.definition["hooks"]["beforeInit"] }}
            }
        {% else %}
            function beforeInit(def) {
                return def
            }
        {% endif %}
    </script>

    <!-- chart creation -->
    <script>
        function percent(scale, percent) {
            const m = scale.min
            const M = scale.max
            const r = M - m

            return m + percent * r
        }

        document.addEventListener("DOMContentLoaded", function() {
            const ctx = document.querySelector("canvas");
            const definition = beforeInit({{ this.definition | to_json }})

            console.log('chart def', definition)
            const chart = new Chart(ctx, definition);

            // reset on double click
            ctx.addEventListener("dblclick", () => chart.resetZoom());

            // make chart available to Alpine
            window.chart = chart
        });
    </script>
</body>
</html>
