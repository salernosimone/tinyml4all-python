{% for tree in trees %}{{ tree.convert_to("c++", class_name=tree | var) }}{% endfor %}

class {{ class_name or "RandomForest" }} {
    public:
        void operator()(Input& input, Output& output) {
            Output treeOutput;
            float scores[{{ num_classes }}] = { 0 };

            // iterate over trees
            {% for tree in trees %}
                tree{{ loop.index }}(input, treeOutput);
                scores[treeOutput.classification.idx] += 1;
            {% endfor %}

            // get output with highest vote
            output.classification.idx = 0;
            output.classification.confidence = scores[0];

            for (uint8_t i = 1; i < {{ num_classes }}; i++) {
                if (scores[i] > output.classification.confidence) {
                    output.classification.idx = i;
                    output.classification.confidence = scores[i];
                }
            }
        }

        /**
         * Always ready
         */
        bool isReady() {
            return true;
        }

    protected:
        {% for tree in trees %}
            {{ tree | var }} tree{{ loop.index}};
        {% endfor %}
};